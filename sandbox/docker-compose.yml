version: "3.3"

services:
  estuary-discovery1:
    image: estuaryoss/discovery:latest
    command: bash -c "sleep 30 && /root/app/main-linux"
    environment:
      #      FLUENTD_IP_PORT: 192.168.100.12:24224
      EUREKA_SERVER: http://eureka-server1:8080/eureka/v2 #your eureka server
      APP_IP_PORT: estuary-discovery1:8080 #your app details: where it is and on which port. needed for service discovery and spread of tests from the test client
      HTTP_AUTH_TOKEN: "None"
    ports:
      - "8082:8080"

  estuary-discovery2:
    image: estuaryoss/discovery:latest
    command: bash -c "sleep 30 && /root/app/main-linux"
    environment:
      #      FLUENTD_IP_PORT: 192.168.100.12:24224
      EUREKA_SERVER: http://eureka-server2:8080/eureka/v2 #your eureka server
      APP_IP_PORT: estuary-discovery2:8080 #your app details: where it is and on which port. needed for service discovery and spread of tests from the test client
      HTTP_AUTH_TOKEN: "None"
    ports:
      - "8083:8080"
  estuary-deployer1:
    image: estuaryoss/deployer:latest
    environment:
      limit: 'sky' # example env var inserted. you can read it with environ('limit')
      MAX_DEPLOYMENTS: 10 # how many deployments to be done. Useful for VMs where user knows how much resources a docker-compose env use.
      EUREKA_SERVER: http://eureka-server1:8080/eureka/v2 #your eureka server
      #      APP_APPEND_ID: SR # this suffix will be added to the deployer service in order to differentiate between different services mapped on VM with specific resources
      APP_IP_PORT: estuary-deployer1:8080 #your app details: where it is and on which port. needed for service discovery and spread of tests from the test client
      HTTP_AUTH_TOKEN: "None"
    command: bash -c "sleep 30 && /root/deployer/main-linux"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock # works on win also as long as you don't enable tcp daemon on 2375/2376
    ports:
      - "8084:8080"
    expose:
      - "8080"

  estuary-deployer2:
    image: estuaryoss/deployer:latest
    environment:
      limit: 'sky' # example env var inserted. you can read it with environ('limit')
      MAX_DEPLOYMENTS: 10 # how many deployments to be done. Useful for VMs where user knows how much resources a docker-compose env use.
      EUREKA_SERVER: http://eureka-server2:8080/eureka/v2 #your eureka server
      #      APP_APPEND_ID: SR # this suffix will be added to the deployer service in order to differentiate between different services mapped on VM with specific resources
      APP_IP_PORT: estuary-deployer2:8080 #your app details: where it is and on which port. needed for service discovery and spread of tests from the test client
      HTTP_AUTH_TOKEN: "None"
    command: bash -c "sleep 30 && /root/deployer/main-linux"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock # works on win also as long as you don't enable tcp daemon on 2375/2376
    ports:
      - "8085:8080"
    expose:
      - "8080"

  eureka-server1:
    image: estuaryoss/netflix-eureka:1.10.8
    hostname: eureka-server
    ports:
      - "8080:8080"
    expose:
      - "8080"

  eureka-server2:
    image: estuaryoss/netflix-eureka:1.10.8
    hostname: eureka-server
    ports:
      - "8081:8080"